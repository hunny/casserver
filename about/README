============================================================================
1. Maintaining Local Customization Using Maven2
https://wiki.jasig.org/display/CASUM/Maintaining+local+customizations+using+Maven+2

mvn -e -Dmaven.test.skip=true package install

https://wiki.jasig.org/display/CASUM/Maintaining+local+customizations+using+Maven+2

Background 
This page is created in order to let users share how to maintain local customizations using Maven 2. 
Those customizations include:

   * changing properties in deploymentConfigContext.xml, cas-servlet.xml, etc.;
   * adding customized views and themes;
   * your own classes of Authentication Handlers, principles or special web flow elements;
   * and any other things you need.

Aim
By using Maven 2, we aim to perform the following:

   * Easier to extend and customize CAS server for your need
   * Less Pain in transiting to new CAS versions, by running maven

Assumptions
This HOW TO makes the following assumptions:

   * CAS 3.1.0 or greater
   * You know how to customize CAS, including adding classes and other web application resources
   * You know the basics of Maven 2, read the Maven in 5 minutes introduction.

Possible Solutions1. cas-webapp overlay
First of all, create a directory where you will put your own customized files and where you will compile:

cd cas-server-3.1.1
mkdir cas-server-xxx
Then create a pom.xml file like this in your new directory:

<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.xxx.cas</groupId>
    <artifactId>xxx-cas</artifactId>
    <version>1.4-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>XXX CAS webapp</name>
    <organization>
        <name>XXX</name>
        <url>http://www.xxx.fr</url>
    </organization>
    <description>The XXX's customizations to the JA-SIG CAS server.</description>
    <dependencies>
        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-server-webapp</artifactId>
            <version>3.1.1</version>
            <type>war</type>
        </dependency>
 
        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-server-core</artifactId>
            <version>3.1.1</version>
        </dependency>
 
        <!-- if you need LDAP handler -->
        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-server-support-ldap</artifactId>
            <version>3.1.1</version>
        </dependency>
 
        <!-- if you need X509 handler -->
        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-server-support-x509</artifactId>
            <version>3.1.1</version>
        </dependency>
 
      </dependencies>
    <build>
        <finalName>cas</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>RELEASE</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>jasig-repository</id>
            <name>JA-SIG Maven2 Repository</name>
            <url>http://developer.ja-sig.org/maven2</url>
        </repository>
    </repositories>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changelog-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
</project>
Replace XXX by your organisation name and remove the X509 or the LDAP lines if you don't need these handlers.
Now you can put your own customized files in cas-server-3.1.1/cas-server-xxx/src/. 
For example if you want to overload the X509 handler sourcecode, create this file:

cas-server-xxx/src/main/java/X509CredentialsAuthenticationHandler.java

Then you just have to compile your project:

cd cas-server-3.1.1/cas-server-xxx/
mvn -Dmaven.test.skip=true package install
The war will be available in cas-server-3.1.1/cas-server-xxx/target/cas.war
Another way that is not explained above that need to be explained is: Install the cas.war into local repository. 
Build your own customization project using Maven 2, include the cas.war as a dependency

============================================================================
2. Convert Image to favicon.ico
ico generate address: http://www.favicon.cc/

============================================================================
3. 【SSO-CAS】Change CAS https credentials authentication to http.
CAS Server Change:
(1) ticketGrantingTicketCookieGenerator.xml p:cookieSecure="true" to p:cookieSecure="false".
(2) warnCookieGenerator.xml p:cookieSecure="true" to p:cookieSecure="false".
(3) deployerConfigContext.xml
	<bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"  
          p:httpClient-ref="httpClient" />
    to:
    <bean id="proxyAuthenticationHandler"
          class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
          p:httpClient-ref="httpClient" 
          p:requireSecure="false" /> 
CAS Client Change:
修改客户端的https验证 
(1).edu.yale.its.tp.cas.client.filter
把这两段内容注释掉
if (! casValidate.startsWith("https://")){   
            throw new ServletException("validateUrl must start with https://, its current value is [" + casValidate + "]");   
        }   
if (casServiceUrl != null){   
            if (! (casServiceUrl.startsWith("https://")|| (casServiceUrl.startsWith("http://") ))){   
                throw new ServletException("service URL must start with http:// or https://; its current value is [" + casServiceUrl + "]");   
            }   
        }  
(2).修改edu.yale.its.tp.cas.util.SecureURL 
把这段内容注释掉
if (!u.getProtocol().equals("https")){   
                // IOException may not be the best exception we could throw here   
                // since the problem is with the URL argument we were passed, not   
                // IO. -awp9   
                log.error("retrieve(" + url + ") on an illegal URL since protocol was not https.");   
                            throw new IOException("only 'https' URLs are valid for this method");   
            }  
if (!u.getProtocol().equals("https")){  
                // IOException may not be the best exception we could throw here  
                // since the problem is with the URL argument we were passed, not  
                // IO. -awp9  
                log.error("retrieve(" + url + ") on an illegal URL since protocol was not https.");  
                            throw new IOException("only 'https' URLs are valid for this method");  
            }  
(3).客户端filter, 所有https://localhost:8443/cas更改为 http://localhost:8080/cas
===========================================================================
CAS去掉HTTPS认证
如何去掉HTTPS认证？ 
说明：默认情况下HTTP也是可以访问CAS SERVER的，但认证，登陆，退出等操作均没有任何的效果。所以必须作出下面的修改 
1、进入WEB-INF\spring-configuration目录 
　　打开warnCookieGenerator.xml文件 修改p:cookieSecure的值为false 
2、打开ticketGrantingTicketCookieGenerator.xml文件 
　　同样修改p:cookieSecure的值为false 
3、打开WEB-INF\deployerConfigContext.xml文件 
　　查找org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler 
　　把这代码块修改为如下： 
<bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
                    p:httpClient-ref="httpClient" p:requireSecure="false" />
 p:requireSecure=”false”为新添加的
4、客户端filter  
　　所有https://localhost:8443/cas   更改为 http://localhost:8080/cas
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================









